// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ModelTimeSeries model time series
//
// swagger:model model.TimeSeries
type ModelTimeSeries struct {

	// coordinates
	Coordinates []*ModelCoordinate `json:"coordinates"`

	// XUnit describes the X unit, such as a ms (millisecond) or a s (second)
	XUnit string `json:"xUnit,omitempty"`

	// YUnit describes the Y unit, such as acceleration enveloping (gE), mm/s (millimeters per second) or in/s (inch per second)
	YUnit string `json:"yUnit,omitempty"`
}

// Validate validates this model time series
func (m *ModelTimeSeries) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCoordinates(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ModelTimeSeries) validateCoordinates(formats strfmt.Registry) error {

	if swag.IsZero(m.Coordinates) { // not required
		return nil
	}

	for i := 0; i < len(m.Coordinates); i++ {
		if swag.IsZero(m.Coordinates[i]) { // not required
			continue
		}

		if m.Coordinates[i] != nil {
			if err := m.Coordinates[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("coordinates" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ModelTimeSeries) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ModelTimeSeries) UnmarshalBinary(b []byte) error {
	var res ModelTimeSeries
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
